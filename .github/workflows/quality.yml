# Workflow name
name: 'Code Quality'

# Event for the workflow
on: pull_request

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# List of jobs
jobs:
  checks:
    name: Pre Tests Checks
    # Operating System
    runs-on: ubuntu-latest
    # Job steps
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: '22.x'

      - name: Cache node modules
        id: cache-pnpm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          # pnpm cache files are stored in `~/.pnpm` on Linux/macOS
          path: ~/.pnpm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: pnpm list

      - name: Install Dependencies
        run: pnpm install

      - name: Lint
        run: pnpm lint

      - name: Typescript
        run: pnpm tsc

  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-node@v5
        with:
          node-version: '22.x'

      - name: Cache node modules
        id: cache-pnpm
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.pnpm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: pnpm list

      - name: Install Dependencies
        run: pnpm install

      - name: Test Coverage
        run: pnpm test:coverage

      - name: Codecov Report
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

